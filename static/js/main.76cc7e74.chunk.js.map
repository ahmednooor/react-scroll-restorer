{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["ScrollRestorerContext","React","ScrollRestorer","children","scrollStateRef","value","useScrollRestorer","uniqueKey","depsArray","saveScroll","document","window","restoreScroll","ComponentOne","style","paddingTop","textAlign","Array","keys","map","num","key","ComponentTwo","App","useState","toggleSwitch","setToggleSwitch","position","top","left","transform","padding","marginTop","onClick","_","ReactDOM","render","getElementById"],"mappings":"mNAEMA,EAAwBC,IAA9B,gBAEaC,EAAiB,SAAC,GAAe,IAAdC,EAAc,EAAdA,SACtBC,EAAiBH,WAAvB,IAEA,OAAO,kBAACD,EAAD,UAAgCK,MAAOD,GAA9C,IAKSE,EAAoB,SAACC,EAAWC,QAAmB,IAAnBA,MAAY,IACrD,IAAMJ,EAAiBH,eAAvB,GAEMQ,EAAa,iBAAkB,YAC7BC,2BAA6BC,OAAjC,cACIP,4BAAkDO,OAAlDP,QACAA,4BAAkDO,OAAlDP,WAEL,CAACG,EALJ,IAQMK,EAAgB,iBAAkB,WACpCD,gBACIP,6BADJO,EAEIP,6BAFJO,KADkB,aAAtB,IAwBA,OAjBAV,qBAAsB,WAClB,OAAO,WACHQ,OAEL,CAJHR,IAMAA,eAAgB,WACZW,MACD,CAFHX,IAIAA,eAAgB,WAEZ,OADAS,sCACO,WACHA,4CAEL,CALHT,IAOA,GC1CEY,EAAe,WAGnB,OAFAP,EAAkB,gBAGhB,uBAAGQ,MAAO,CAACC,WAAY,OAAQC,UAAW,WACvC,YAAIC,MAAM,KAAKC,QAAQC,KAAI,SAACC,GAAD,OAC1B,0BAAMC,IAAKD,EAAM,GAAjB,uBACkBA,EAAM,EACtB,mCAQJE,EAAe,WAGnB,OAFAhB,EAAkB,gBAGhB,uBAAGQ,MAAO,CAACC,WAAY,OAAQC,UAAW,WACvC,YAAIC,MAAM,KAAKC,QAAQC,KAAI,SAACC,GAAD,OAC1B,0BAAMC,IAAKD,EAAM,GAAjB,uBACkBA,EAAM,EACtB,mCAwBKG,EAjBH,WAAO,IAAD,EACwBtB,IAAMuB,UAAS,GADvC,mBACTC,EADS,KACKC,EADL,KAGhB,OAAO,kBAAC,EAAD,KACH,4BACEZ,MAAO,CACLa,SAAU,QAASC,IAAK,IAAKC,KAAM,MACnCC,UAAW,mBAAoBC,QAAS,MAAOC,UAAW,OAC5DC,QAAS,SAACC,GACRR,GAAiBD,KALrB,QAOQA,EAAe,eAAiB,gBAEvCA,EAAe,kBAAC,EAAD,MAAmB,kBAAC,EAAD,QC3CzCU,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAAS2B,eAAe,U","file":"static/js/main.76cc7e74.chunk.js","sourcesContent":["import React from 'react'\n\nconst ScrollRestorerContext = React.createContext();\n\nexport const ScrollRestorer = ({children}) => {\n    const scrollStateRef = React.useRef({});\n\n    return <ScrollRestorerContext.Provider value={scrollStateRef}>\n        {children}\n    </ScrollRestorerContext.Provider>\n}\n\nexport const useScrollRestorer = (uniqueKey, depsArray = []) => {\n    const scrollStateRef = React.useContext(ScrollRestorerContext);\n\n    const saveScroll = React.useCallback((_) => {\n        if (document.body.offsetHeight > window.innerHeight) {\n            scrollStateRef.current[`_${uniqueKey}_scrollX`] = window.scrollX;\n            scrollStateRef.current[`_${uniqueKey}_scrollY`] = window.scrollY;\n        }\n    }, [uniqueKey, scrollStateRef]);\n    \n    /* eslint-disable react-hooks/exhaustive-deps */\n    const restoreScroll = React.useCallback(() => {\n        window.scrollTo(\n            scrollStateRef.current[`_${uniqueKey}_scrollX`] || 0,\n            scrollStateRef.current[`_${uniqueKey}_scrollY`] || 0\n        );\n    }, [uniqueKey, scrollStateRef, ...depsArray]);\n\n    React.useLayoutEffect(() => {\n        return () => {\n            saveScroll();\n        }\n    }, [saveScroll]);\n\n    React.useEffect(() => {\n        restoreScroll();\n    }, [restoreScroll]);\n    \n    React.useEffect(() => {\n        document.addEventListener(\"scroll\", saveScroll);\n        return () => {\n            document.removeEventListener(\"scroll\", saveScroll);\n        }\n    }, [saveScroll]);\n\n    return scrollStateRef;\n};\n","import React from 'react'\n\nimport { ScrollRestorer, useScrollRestorer } from 'react-scroll-restorer';\n\n// ComponentOne with scrollable content\nconst ComponentOne = () => {\n  useScrollRestorer(\"ComponentOne\");\n\n  return (\n    <p style={{paddingTop: '36px', textAlign: 'center'}}>\n      {[...Array(100).keys()].map((num) => (\n        <span key={num + 1}>\n          ComponentOne • {num + 1}\n          <br />\n        </span>\n      ))}\n    </p>\n  );\n}\n\n// ComponentTwo with scrollable content\nconst ComponentTwo = () => {\n  useScrollRestorer(\"ComponentTwo\");\n\n  return (\n    <p style={{paddingTop: '36px', textAlign: 'center'}}>\n      {[...Array(100).keys()].map((num) => (\n        <span key={num + 1}>\n          ComponentTwo • {num + 1}\n          <br />\n        </span>\n      ))}\n    </p>\n  );\n}\n\nconst App = () => {\n  const [toggleSwitch, setToggleSwitch] = React.useState(true);\n\n  return <ScrollRestorer>\n      <button\n        style={{ \n          position: \"fixed\", top: \"0\", left: '50%', \n          transform: 'translateX(-50%)', padding: \"8px\", marginTop: '8px' }}\n        onClick={(_) => {\n          setToggleSwitch(!toggleSwitch);\n        }}>\n        Show {toggleSwitch ? \"ComponentTwo\" : \"ComponentOne\"}\n      </button>\n      {toggleSwitch ? <ComponentOne /> : <ComponentTwo />}\n  </ScrollRestorer>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}